{"version":3,"sources":["../../src/middlewares/auth.js"],"names":["config","require","UserModel","authUser","req","res","next","session","user","locals","currentUser","authToken","signedCookies","cookieName","findOne","_id","err","toObject","isAdmin","loginname","admin","adminRequired","Error","status","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,WAAR,CAAb;AACA,IAAIC,YAAWD,QAAQ,gBAAR,CAAf;;AAEA,SAASE,QAAT,CAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,IAA1B,EAA+B;;AAE3B,QAAIF,IAAIG,OAAJ,IAAeH,IAAIG,OAAJ,CAAYC,IAA/B,EAAqC;AAC/B,YAAMA,OAAOJ,IAAIG,OAAJ,CAAYC,IAAzB;AACAH,YAAII,MAAJ,CAAWC,WAAX,GAAyBF,IAAzB;AACAF;AACL,KAJD,MAIO;AACC,YAAMK,YAAYP,IAAIQ,aAAJ,CAAkBZ,OAAOa,UAAzB,KAAsC,EAAxD;AACAR,YAAII,MAAJ,CAAWC,WAAX,GAAyB,IAAzB;;AAEA,YAAIC,SAAJ,EAAe;AACXT,sBAAUY,OAAV,CAAkB,EAACC,KAAIJ,SAAL,EAAlB,EAAkC,UAACK,GAAD,EAAKR,IAAL,EAAY;AAC1C,oBAAIQ,OAAO,CAACR,IAAZ,EAAkB;AACdF,2BADc,CACN;AACR;AACH,iBAHD,MAGO;AACHE,2BAAOA,KAAKS,QAAL,EAAP;AACAT,yBAAKU,OAAL,GAAeV,KAAKW,SAAL,KAAmBnB,OAAOoB,KAAzC;;AAEAhB,wBAAIG,OAAJ,CAAYC,IAAZ,GAAmBA,IAAnB;AACAH,wBAAII,MAAJ,CAAWC,WAAX,GAAyBF,IAAzB;AACAF,2BANG,CAMK;AACX;AACJ,aAZD;AAaH,SAdD,MAcM;AACFA;AACH;AACJ;AACJ;AACL;AACA,SAASe,aAAT,CAAuBjB,GAAvB,EAA2BC,GAA3B,EAA+BC,IAA/B,EAAoC;AAChC,QAAI,CAACF,IAAIG,OAAL,IAAgB,CAACH,IAAIG,OAAJ,CAAYC,IAAjC,EAAuC;AACnC,YAAIQ,MAAM,IAAIM,KAAJ,CAAU,OAAV,CAAV;AACAN,YAAIO,MAAJ,GAAY,GAAZ;AACAjB,aAAKU,GAAL;AACA;AACH;AACD,QAAG,CAACZ,IAAIG,OAAJ,CAAYC,IAAZ,CAAiBU,OAArB,EAA6B;AACzB,YAAIF,OAAM,IAAIM,KAAJ,CAAU,UAAV,CAAV;AACAN,aAAIO,MAAJ,GAAY,GAAZ;AACAjB,aAAKU,IAAL;AACA;AACH;AACDV;AACH;;AAEDkB,OAAOC,OAAP,GAAiB,EAACtB,kBAAD,EAAUkB,4BAAV,EAAjB","file":"auth.js","sourcesContent":["var config = require(\"../config\");\r\nvar UserModel =require('../models/user');\r\n\r\nfunction authUser(req,res,next){\r\n\r\n    if (req.session && req.session.user) {\r\n          const user  =req.session.user;\r\n          res.locals.currentUser = user;\r\n          next();     \r\n    } else {\r\n            const authToken = req.signedCookies[config.cookieName]||'';\r\n            res.locals.currentUser = null;\r\n        \r\n            if (authToken) {\r\n                UserModel.findOne({_id:authToken},(err,user)=>{\r\n                    if (err || !user) {\r\n                        next(); //why not is next(err)?\r\n                        //because this is not handling error , this just function with auth\r\n                    } else {\r\n                        user = user.toObject();\r\n                        user.isAdmin = user.loginname === config.admin;\r\n\r\n                        req.session.user = user;\r\n                        res.locals.currentUser = user;\r\n                        next(); //why not is next(err)?\r\n                    }\r\n                });        \r\n            }else {\r\n                next();\r\n            }\r\n        }\r\n    }\r\n/* admin control auth middleware   */\r\nfunction adminRequired(req,res,next){\r\n    if (!req.session || !req.session.user) {\r\n        let err = new Error(\"需要登录!\");\r\n        err.status =403;\r\n        next(err);\r\n        return;\r\n    }  \r\n    if(!req.session.user.isAdmin){\r\n        let err = new Error(\"需要管理员权限!\");\r\n        err.status =403;\r\n        next(err);\r\n        return;\r\n    }\r\n    next();\r\n}\r\n   \r\nmodule.exports = {authUser,adminRequired};"]}